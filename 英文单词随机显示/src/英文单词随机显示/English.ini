abstract        =        抽象
access          =        访问,存取
algorithm       =        算法
annotation      =        代码注释
anonymous       =        匿名的
directly        =        直接地,立即
apply           =        应用,适用
application     =        应 用 ,应用 程序
crash           =        程序崩溃
arbitrary       =        任意的
argument        =        参数;争论,论据
assert          =        (关键字) 断言
associate       =        关联(同伴,伙伴)
attribute       =        属性(品质,特征)
boolean         =        (关键字) 逻辑的, 布尔型
call            =        调用; 呼叫;
circumstance    =        事件(环境,状况)
crash           =        崩溃,破碎
cohesion        =        内聚,黏聚,结合
command         =        命令,指令
Comments        =        文本注释
compile         =        编译
Compilation     =        编辑
const           =        (保留字)
constant        =      	 常量, 常数, 恒量
continue        = 		 (关键字)
coupling        =        耦合,联结
declare         =		 声明
delimiter  		=		 定义符; 定界符
Encapsulation 	=		 封装
Exception 		=		 例外; 异常
entry 			=		 登录项, 输入项, 条目
enum  			=		 (关键字) 枚举
execute 		=		 执行
exhibit 		=		 显示, 陈列
exist 			=		 存在, 发生 (SQL 关键字 exists)
extends 		=		 (关键字) 继承、扩展
false 			=		 (关键字)
final 			=		 (关键字) finally (关键字)
fragments 		=		 段落; 代码块
FrameWork 		=		 [java]结构,框架 ['freimw.:k]
Generic 		=		 [java]泛型 [d.i'nerik]
goto 			=		 (保留字) 跳转
heap 			=		 堆 [hi:p]
implements 		=		 (关键字) 实现 ['implim.nt]
import 			=		 (关键字) 引入(进口,输入)
Info 			=		 信息
Inheritance 	=		 [java]继承
initialize 		=		 预置初始化
instanceof 		=		 (关键字) 运算符， 用于引用变量，以检查这个对象是否是某种类型。返回 boolean 值。
interface 		=		 (关键字) 接口
invoke 			=		 调用
Iterator 		=		 [java]迭代器, 迭代程序
legal 			=		 合法的
log 			=		 日志,记录
native 			=		 (关键字)
nested 			=		 [java]嵌套的 如：内部类(nested classes)
Object 			=		 [java]对象 Overload [java]方法的重载(不同参数列表的同名方法)
Override   		=		 [java]方法的覆盖(覆盖父类的方法)
polymiorphism 	=		 [java]多态 (polymorphism 多形性
principle   	=		 	原则,原理,主义
priority   	 	=		 优先级 
process  		=		 程序, 进程
protected  		=		 (关键字) 受保护的,私有的
provide  		=		 规定(供应,准备,预防)
refer to  		=		 引用 
reference 		=		 参考(引用,涉及)
Reflection 		=		 [java]反射 
script 			=		 手写体,小型程序 
serialized 		=		 序列化,串行化 
Socket 			=		 [java]网络套接字
stack 			=		 堆栈 (对应 heap 堆)
statement 		=		 程序语句; 语句  陈述,指令
subclass 		=		 子类 (supertype 父类)
switch 			=		 (关键字) 选择语句。 n.开关,道岔
synchronized 	=		 (关键字) 同步(锁)
Thread 			=		 [java]线程 
throw 			=		 (关键字) throws (关键字) 抛出(异常)
transient 		=		 (关键字) 瞬变;临时的(可序列化)
valid 			=		 正确的,有效的
variable 		=		 变量 a.可变的
volatile 		=		 (关键字) 不稳定的
while 			=		 (关键字) 循环语句。当...的时候